{"ast":null,"code":"var _jsxFileName = \"/Users/Josh_Lo/Documents/School/coding_bootcamp_fall_2019/Projects/project-3/client/src/components/views/MembersPage/MembersPage.jsx\";\nimport React from 'react';\nimport Canvas from '../../Canvas/Canvas';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { red } from '@material-ui/core/colors'; // import {api} from '../utils/Api';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nexport default class MembersPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image_object: null,\n      image_object_details: {},\n      active_type: null\n    };\n  }\n\n  updateImageObject(e) {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => {\n      this.setState({\n        image_object: reader.result,\n        image_object_details: {},\n        active_type: null\n      });\n    };\n  }\n\n  render() {\n    // console.log(this.state.image_object_details, \" image object details \");\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      color: \"textPrimary\",\n      component: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, \"Object Detection Tensorflow\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, this.state.image_object && /*#__PURE__*/React.createElement(Canvas, {\n      ref: \"canvas\",\n      id: \"canvas\",\n      uploadedImage: this.state.image_object,\n      width: this.state.image_object.width,\n      height: this.state.image_object.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      component: \"label\" // <-- Just add me!\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, \"Upload Image\", /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/jpeg,image/png\",\n      onChange: e => this.updateImageObject(e),\n      type: \"file\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, this.state.image_object && /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.processImageObject(\"imagenet\"),\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 61\n      }\n    }, \"Get objects with ImageNet\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, this.state.image_object && /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.processImageObject(\"coco-ssd\"),\n      variant: \"contained\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 61\n      }\n    }, \"Get objects with Coco SSD\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Josh_Lo/Documents/School/coding_bootcamp_fall_2019/Projects/project-3/client/src/components/views/MembersPage/MembersPage.jsx"],"names":["React","Canvas","Container","Grid","Card","CardContent","Typography","Button","red","Table","TableBody","TableCell","TableHead","TableRow","Paper","CircularProgress","MembersPage","Component","constructor","props","state","image_object","image_object_details","active_type","updateImageObject","e","file","target","files","reader","FileReader","readAsDataURL","onload","setState","result","render","width","height","display","processImageObject"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Canvas from '../../Canvas/Canvas';\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { red } from '@material-ui/core/colors';\n\n// import {api} from '../utils/Api';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nexport default class MembersPage extends React.Component { \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            image_object: null,\n            image_object_details: {},\n            active_type: null\n        }\n    }\n\n    updateImageObject(e) {\n        const file  = e.target.files[0];\n        const reader = new FileReader();\n\n        \n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            this.setState({image_object: reader.result, image_object_details: {}, active_type: null});\n        };\n\n\n    }\n\n    render() {\n        // console.log(this.state.image_object_details, \" image object details \");\n        return (\n            <Container maxWidth=\"md\">\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <CardContent>\n                            <Typography variant=\"h4\" color=\"textPrimary\" component=\"h4\">\n                                Object Detection Tensorflow\n                            </Typography>\n                        </CardContent>\n                    </Grid>\n                    <Grid item xs={12}>\n                        {this.state.image_object &&\n                            <Canvas ref = \"canvas\" id = \"canvas\" uploadedImage = {this.state.image_object} width = {this.state.image_object.width} height = {this.state.image_object.height}></Canvas>\n                        }\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Button variant=\"contained\"\n                                    component='label' // <-- Just add me!\n                                    >\n                                    Upload Image\n                                    <input accept=\"image/jpeg,image/png\" onChange={(e) =>  this.updateImageObject(e)} type=\"file\" style={{ display: 'none' }} />\n                                </Button>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Grid container justify=\"center\" spacing={3}>\n                            <Grid item >\n                                {this.state.image_object && <Button onClick={() => this.processImageObject(\"imagenet\")}variant=\"contained\" color=\"primary\">\n                                    Get objects with ImageNet\n                                </Button>}\n                            </Grid>\n                            <Grid item> \n                                {this.state.image_object && <Button onClick={() => this.processImageObject(\"coco-ssd\")}variant=\"contained\" color=\"secondary\">\n                                    Get objects with Coco SSD\n                                </Button>}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}